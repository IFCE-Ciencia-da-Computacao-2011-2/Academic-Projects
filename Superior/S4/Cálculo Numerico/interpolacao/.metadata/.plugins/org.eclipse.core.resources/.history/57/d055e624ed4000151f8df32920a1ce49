package interpolacao.newton.tabela_diferenca;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

class Ordem {
	private int numero;
	private List<FuncaoDiferenca> funcoes;

	public Ordem(List<FuncaoDiferenca> funcoes) {
		this.funcoes = funcoes;
	}

	private Ordem(int numero, List<FuncaoDiferenca> funcoes) {
		this.numero = numero;
		this.funcoes = funcoes;
	}

	public Optional<Ordem> gerarOrdem() {
		if (isUltimaOrdem()) 
			return Optional.empty();

		List<FuncaoDiferenca> funcoesNovaOrdem = new ArrayList<>();

		gerarFuncoesDeOrdemFilha(funcoesNovaOrdem);

		return Optional.of(
			new Ordem(this.numero + 1, funcoesNovaOrdem)
		);
	}

	private void gerarFuncoesDeOrdemFilha(List<FuncaoDiferenca> funcoesNovaOrdem) {
		for (int i = 0; i < funcoes.size()-1; i++) {
			FuncaoDiferenca funcaoIPlus1 = funcoes.get(i+1);
			FuncaoDiferenca funcaoI = funcoes.get(i);

			funcoesNovaOrdem.add(
				new FuncaoDiferencaFilha(funcaoI, funcaoIPlus1)
			);
		}
	}

	private boolean isUltimaOrdem() {
		return funcoes.size() == 1;
	}		
}